const axios = require('axios');
const TonWeb = require('tonweb');
const { mnemonicToPrivateKey, mnemonicNew } = require('@ton/crypto');


// axios.post("https://api.telegram.org/bot7606646952:AAEKC9q8VRToKuzNNWSaRQ_nW9zKw9_cqSU/sendMessage", {
//     "chat_id": 2090667228,
//     "text": "hello"
// }).then(function(resp) {
//     console.log(resp.data)
// }).catch(function(err) {
//     console.log(err)
// })

async function createWallet() {
    const tonweb = new TonWeb();

    // 1. –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º seed-—Ñ—Ä–∞–∑—É (24 —Å–ª–æ–≤–∞)
    const mnemonic = await mnemonicNew();
    // console.log("üìú Seed-—Ñ—Ä–∞–∑–∞:", mnemonic.join(" "));

    // 2. –ü–æ–ª—É—á–∞–µ–º –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á
    const keyPair = await mnemonicToPrivateKey(mnemonic);
    const publicKey = keyPair.publicKey.toString("hex");
    const privateKey = keyPair.secretKey.toString("hex");

    // console.log("üîë Public Key:", publicKey);
    // console.log("üîí Private Key:", privateKey);

    // 3. –°–æ–∑–¥–∞–µ–º –∫–æ—à–µ–ª–µ–∫ V4R2 (–æ–Ω –Ω–µ –º–µ–Ω—è–µ—Ç –∞–¥—Ä–µ—Å –ø–æ—Å–ª–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è)
    const WalletClass = tonweb.wallet.all["v4R2"];
    const wallet = new WalletClass(tonweb.provider, {
        publicKey: keyPair.publicKey,
    });

    // 4. –ü–æ–ª—É—á–∞–µ–º –∏ –≤—ã–≤–æ–¥–∏–º –∞–¥—Ä–µ—Å (–±—É–¥–µ—Ç –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å EQ...)
    const address = await wallet.getAddress();

    // 5. –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ .env
    // const envData = `MNEMONIC="${mnemonic.join(" ")}"\nPRIVATE_KEY="${privateKey}"\nPUBLIC_KEY="${publicKey}"\nWALLET_ADDRESS="${address.toString(true, true, true)}"`;

    const result =  {
        "publicKey": publicKey,
        "privateKey": privateKey,
        "mnemonic": mnemonic.join(" "),
        "wallet": address.toString(true, true, true)
    }

    console.log(JSON.stringify(result))
}

return createWallet()
